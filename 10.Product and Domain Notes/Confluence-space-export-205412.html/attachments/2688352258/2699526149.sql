--Objective: To trigger emails to advisers when a specific "New Issue" is closed and the issue date matches the current date.

-- Step 1 : The Data Driven Subscription Trigger Query

-- Check if any issue is closed today
--This query checks if any "New Issue" has a status of 'Closed' and the Close date is today. 
--If these conditions are met, it fetches relevant adviser information to be used in the main report., if conditions not met the report would be processing 0 items from the data driven susbcrtions
--Data sources = [SQLCIP].[NewIssues] and [Dynamics].[CRM_MSCRM]
--Dataset fields:	AdvisorName, CloseDate, EmailAddress,IssueName

SELECT DISTINCT
    ac.AdvisorName, 
    'jackson.fan@craigsip.com' AS [EmailAddress], -- put this here for testing purposes
    i.IssueName,
    CONVERT(VARCHAR, i.CloseDate, 120) AS CloseDate -- convert to this date format to make sure the data-driven subscription could recognize
FROM 
(
    SELECT 
        acc.dsl_name AS AdviserCode, 
        su.FullName AS AdvisorName,
        su.InternalEMailAddress AS EmailAddress
    FROM 
        [Dynamics].[CRM_MSCRM].dbo.dsl_advisercommissioncode acc
    INNER JOIN 
        [Dynamics].[CRM_MSCRM].dbo.dsl_advisercommissionlink acl 
            ON acl.dsl_AdvisersId = acc.dsl_advisercommissioncodeId
    INNER JOIN 
        [Dynamics].[CRM_MSCRM].dbo.SystemUser su 
            ON su.SystemUserId = acl.dsl_Adviser
    WHERE 
        acc.dsl_Retired = 0 
        AND acl.statecode = 0 
        AND acc.dsl_name <> 'HEADOFFICE'
) ac 
LEFT JOIN [SQLCIP].[NewIssues].[dbo].[ClientAllocation] ca 
    ON ac.AdviserCode COLLATE DATABASE_DEFAULT = ca.AdvisorCode COLLATE DATABASE_DEFAULT 
INNER JOIN [SQLCIP].[NewIssues].[dbo].[IssueBranchAllocation] iba 
    ON iba.IssueBranchId = ca.IssueBranchId
INNER JOIN [SQLCIP].[NewIssues].[dbo].[Issue] i 
    ON i.IssueId = iba.IssueId
INNER JOIN [SQLCIP].[NewIssues].[dbo].[IssueStatus] ist 
    ON ist.IssueStatusId = i.IssueStatusId
WHERE 
	1=1
	--AND  i.CloseDate =  '2024-08-13' --CAST(GETDATE() AS DATE) -- '2024-09-13'-- CAST(GETDATE() AS DATE) --13/08/2024
	AND  i.CloseDate =  CAST(GETDATE() AS DATE)
    AND ist.Description = 'Closed' 


--Step 2: Mapping Subscription Output to Report Parameters
--Report parameters:
--@AdviserName
--@EmailAddress
--@IssueName
--These values will be used to filter the main dataset in the report.
--Step 2.1 Look up tables set up

--For AdvisorName Look Up -- SSRS
SELECT DISTINCT su.FullName AS AdvisorName
FROM 
    [Dynamics].[CRM_MSCRM].[dbo].[dsl_advisercommissioncode] acc
INNER JOIN 
    [Dynamics].[CRM_MSCRM].[dbo].[dsl_advisercommissionlink] acl 
    ON acl.dsl_AdvisersId = acc.dsl_advisercommissioncodeId
INNER JOIN 
    [Dynamics].[CRM_MSCRM].[dbo].[SystemUser] su 
    ON su.SystemUserId = acl.dsl_Adviser
WHERE 
    acc.dsl_Retired = 0 
    AND acl.statecode = 0 
    AND acc.dsl_name <> 'HEADOFFICE'
UNION 
SELECT '<All Advisors>' 
ORDER BY AdvisorName;

--For Issues Name look up
--select a list of issues name latest Top 20 for users selection if needed
select distinct TOP 20
	 
	--IssueName + ' - ' + convert(varchar(20), convert(date, IssueDate)) AS IssueNameAndDate,
	IssueName,
	IssueDate,
	--i.CloseDate
	ist.Description As IssueStatus

from  [SQLCIP].[NewIssues].dbo.Issue i

inner join [SQLCIP].[NewIssues].[dbo].[IssueStatus] ist
	on ist.IssueStatusId = i.IssueStatusId


order by IssueDate desc


------For Issues Close Date look up, created a Depency for user to select if they needed
SELECT DISTINCT
    IssueName,
    CloseDate
FROM [SQLCIP].[NewIssues].dbo.Issue
WHERE IssueName = @IssueName
order by CloseDate desc



--Step 3: Main Query for the Report
--Retrieves detailed information about the closed issues, including client allocations, cash balances, and adviser details. It is filtered based on the parameters generated by the subscription dataset.
DECLARE @AdvisorName VARCHAR(100) = 'Nick Bartels'; -- Example value, would be passed in dynamically
DECLARE @CloseDate DATE = '2024-08-13'; 
DECLARE @IssueName VARCHAR(MAX) = 'Hamilton Lane Fund - UNHEDGED - Aug'; -- Passed dynamically

SELECT 
    ca.ClientId,
    ca.CSN,	
    ca.ClientName, 
	ca.AdvisorCode,	
	ac.AdvisorName AS AdvisorName,-- From the advisor mapping table, stadnardised the nmaing into Advisor
	ac.Branch,
    ca.ShareAllocation AS [Share Allocation],	
    ca.DollarAllocation AS [Dollar Allocation],	-- should be dynamc 
    ism.SettlementMethodName, 
    iba.IssueId,
    i.IssueName, 
    CONVERT(VARCHAR(10), i.IssueDate, 103) AS IssueDate,
	CONVERT(VARCHAR(10), i.CloseDate, 103) AS CloseDate,
    ist.Description AS IssueStatus, 
    i.ExchangeId,  
	--cmnzd.Balance - ca.DollarAllocation  as [Projected Balance], -- the cmnzd.Balance minus DollarAllocation is the correct logics
	case 
                           when c.ShortCode = 'NZD' then cmnzd.Balance - ca.DollarAllocation
                           when c.ShortCode = 'AUD' then cmaud.Balance - ca.DollarAllocation 
                           when c.ShortCode = 'GBP' then cmgbp.Balance - ca.DollarAllocation 
                           when c.ShortCode = 'USD' then cmusd.Balance - ca.DollarAllocation

                           when c.ShortCode = 'EUR' then cmgeur.Balance - ca.DollarAllocation
                           when c.ShortCode = 'CAD' then cmgCAD.Balance - ca.DollarAllocation
                           when c.ShortCode = 'HKD' then cmgHKD.Balance - ca.DollarAllocation 

    end
                           as [Projected Balance],

    c.ShortCode as Currency,
    cmnzd.Balance AS CashManNZD,
    cmaud.Balance AS CashManAUD,
    cmusd.Balance AS CashManUSD,
    cmgbp.Balance AS CashManGBP,
    cmgeur.Balance AS CashManEUR,
    cmgCAD.Balance AS CashManCAD,
    cmgHKD.Balance AS CashManHKD
FROM  
    [SQLCIP].[NewIssues].[dbo].[ClientAllocation] ca
INNER JOIN [SQLCIP].[NewIssues].[dbo].[IssueBranchAllocation] iba 
    ON iba.IssueBranchId = ca.IssueBranchId
INNER JOIN [SQLCIP].[NewIssues].[dbo].[Issue] i 
    ON i.IssueId = iba.IssueId

inner join [SQLCIP].[NewIssues].[dbo].Tranche t -- this seems to the trasactio ntable 
              on t.IssueId = i.IssueId

inner join [SQLCIP].[NewIssues].[dbo].Currency c -- this is to bring in the currecny
              on c.CurrencyId = t.CurrencyId

INNER JOIN [SQLCIP].[NewIssues].[dbo].[IssueStatus] ist 
    ON ist.IssueStatusId = i.IssueStatusId
INNER JOIN [SQLCIP].[NewIssues].[dbo].[SettlementMethod] ism 
    ON ism.SettlementMethodId = ca.SettlementMethodId

LEFT JOIN 
    (SELECT acc.dsl_name as AdvisorID,
	su.FullName as AdvisorName,
	su.InternalEMailAddress as Email,
	lower(replace(su.DomainName,'AACRAIGS\','')) as ID,
	bu.Name as Branch,
	su.SystemUserId as Individual,
	replace(replace(replace(bu.dsl_BranchCode,'BR_',''),'BK_',''),'WR_','') as BranchCode
  FROM [Dynamics].[CRM_MSCRM].dbo.dsl_advisercommissioncode acc
  inner join [Dynamics].[CRM_MSCRM].dbo.dsl_advisercommissionlink acl on acl.dsl_AdvisersId=acc.dsl_advisercommissioncodeId
  inner join [Dynamics].[CRM_MSCRM].dbo.SystemUser su on su.SystemUserId=acl.dsl_Adviser
  inner join [Dynamics].[CRM_MSCRM].dbo.BusinessUnit bu on acc.dsl_BranchId=bu.BusinessUnitId
  where dsl_Retired=0 and acl.statecode=0 and acc.dsl_name<>'HEADOFFICE'
    ) ac 
    ON ac.AdvisorID COLLATE DATABASE_DEFAULT = ca.AdvisorCode COLLATE DATABASE_DEFAULT

LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmnzd 
    ON cmnzd.LedgerID = ca.ClientId AND cmnzd.Currency = 'NZD'
LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmaud 
    ON cmaud.LedgerID = ca.ClientId AND cmaud.Currency = 'AUD'
LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmusd 
    ON cmusd.LedgerID = ca.ClientId AND cmusd.Currency = 'USD'
LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmgbp 
    ON cmgbp.LedgerID = ca.ClientId AND cmgbp.Currency = 'GBP'
LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmgeur 
    ON cmgeur.LedgerID = ca.ClientId AND cmgeur.Currency = 'EUR'
LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmgCAD 
    ON cmgCAD.LedgerID = ca.ClientId AND cmgCAD.Currency = 'CAD'
LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].[CashManBalance] cmgHKD 
    ON cmgHKD.LedgerID = ca.ClientId AND cmgHKD.Currency = 'HKD'

--LEFT JOIN [SQLCIP].[Ace_Reports].[dbo].AgedDebtorsCodeExclude ce 
--    ON ce.AdviserName = @AdvisorName AND ce.AdviserCode = ca.AdvisorCode

WHERE
1=1
    AND (ac.AdvisorName = @AdvisorName OR @AdvisorName='<All Advisors>') 
    AND ce.AdviserCode IS NULL 
    AND i.CloseDate = @CloseDate
    AND i.IssueName COLLATE DATABASE_DEFAULT = @IssueName COLLATE DATABASE_DEFAULT

	--AND c.ShortCode='USD'
ORDER BY
    ca.ClientId;